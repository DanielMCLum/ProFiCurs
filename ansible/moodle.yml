---
- name: Leer outputs de Terraform
  slurp:
    src: ../terraform_output.json
  register: terraform_output_json

- name: Establecer fact de Terraform
  set_fact:
    terraform: "{{ terraform_output_json.content | b64decode | from_json }}"

- name: Configurar servidor web para Moodle
  hosts: moodle_instance
  become: true
  vars:
    moodle_version: "5.0"
    moodle_download_url: "https://download.moodle.org/download.php/direct/stable500/moodle-{{ moodle_version }}.tgz"
    moodle_install_dir: /var/www/moodle
    moodle_datadir: /var/moodledata
    nginx_server_name: "chirterfir.cat"
    php_fpm_user: www-data
    database_host: "{{ rds_endpoint.value }}"
    database_name: moodle_db
    database_user: admin
    database_password: "Pirineus123$"
    php_ver: "8.3"
    php_extensions:
      - php{{ php_ver }}-fpm
      - php{{ php_ver }}-cli
      - php{{ php_ver }}-mysql
      - php{{ php_ver }}-xml
      - php{{ php_ver }}-mbstring
      - php{{ php_ver }}-curl
      - php{{ php_ver }}-zip
      - php{{ php_ver }}-gd
      - php{{ php_ver }}-intl
      - php{{ php_ver }}-soap
      - php{{ php_ver }}-bcmath
      - php{{ php_ver }}-redis

  tasks:
    - name: Actualizar
      become: true
      apt:
        upgrade: yes
        update_cache: yes

    - name: Asegurar que los paquetes esenciales estén instalados
      apt:
        name:
          - curl
          - wget
          - git
          - software-properties-common
        state: present
        update_cache: true

    - name: Añadir repositorio de PHP
      apt_repository:
        repo: ppa:ondrej/php
        state: present

    - name: Instalar Nginx
      apt:
        name: nginx
        state: present

    - name: Eliminar la configuración default de Nginx
      file:
        path: /etc/nginx/sites-enabled/default
        state: absent
      notify: Reiniciar Nginx

    - name: Crear la configuración de Nginx para Moodle
      template:
        src: templates/nginx_moodle.conf.j2
        dest: /etc/nginx/sites-available/moodle
      notify:
        - Crear directorio de logs de Nginx
        - Habilitar sitio de Nginx
        - Reiniciar Nginx

    - name: Crear directorio de logs de Nginx
      file:
        path: /var/log/nginx/{{ nginx_server_name }}.access.log
        state: touch
        owner: www-data
        group: www-data
      when: nginx_server_name is defined

    - name: Habilitar sitio de Nginx
      file:
        src: /etc/nginx/sites-available/moodle
        dest: /etc/nginx/sites-enabled/moodle
        state: link
      notify: Reiniciar Nginx

    - name: Instalar PHP y extensiones necesarias
      apt:
        name: "{{ php_extensions }}"
        state: present

    - name: Configurar PHP-FPM (ajusta según tus necesidades)
      ini_file:
        path: /etc/php/{{ php_ver }}/fpm/php.ini
        section: PHP
        option: max_execution_time
        value: 300
      notify: Reiniciar PHP-FPM

    - name: Configurar PHP-FPM pool (ajusta según tus necesidades)
      template:
        src: templates/php_fpm_pool.conf.j2
        dest: /etc/php/{{ php_ver }}/fpm/pool.d/www.conf
      notify: Reiniciar PHP-FPM

    - name: Crear directorio de instalación de Moodle
      file:
        path: "{{ moodle_install_dir }}"
        state: directory
        owner: www-data
        group: www-data
        mode: '0755'

    - name: Crear directorio de datos de Moodle
      file:
        path: "{{ moodle_install_dir }}"
        state: directory
        owner: www-data
        group: www-data
        mode: '0777'

    #- name: Configurar fichero config.php de Moodle
    #  template:
    #    src: templates/config.php.j2
    #    dest: "{{ moodle_dir }}/config.php"
    #    owner: www-data
    #    group: www-data
    #    mode: '0644'
    #  notify: Reiniciar PHP-FPM

    - name: Configurar pool de PHP-FPM
      template:
        src: templates/php_fpm_pool.conf.j2
        dest: /etc/php/{{ php_ver }}/fpm/pool.d/www.conf
      vars:
        php_fpm_user: "www-data"
      register: result
      failed_when: result.failed

    - name: Asegurar la propiedad del directorio del socket de PHP-FPM
      file:
        path: /run/php/
        owner: www-data
        group: www-data
        recurse: yes
      register: result
      failed_when: result.failed

    - name: Descargar Moodle
      get_url:
        url: "{{ moodle_download_url }}"
        dest: /tmp/moodle.tar.gz

    - name: Descomprimir Moodle
      command: tar -xzf /tmp/moodle.tar.gz -C /tmp/
      args:
        creates: /tmp/moodle

    - name: Copiar archivos de Moodle al directorio de instalación
      command: rsync -av /tmp/moodle/ "{{ moodle_install_dir }}"
      notify:
        - Cambiar propiedad del directorio de Moodle

    - name: Cambiar propiedad del directorio de Moodle
      file:
        path: "{{ moodle_install_dir }}"
        owner: www-data
        group: www-data
        recurse: yes

    - name: Eliminar archivo de instalación de Moodle
      file:
        path: /tmp/moodle.tar.gz
        state: absent

    - name: Eliminar directorio temporal de Moodle
      file:
        path: /tmp/moodle
        state: absent

  handlers:
    - name: Reiniciar Nginx
      service:
        name: nginx
        state: restarted

    - name: Reiniciar PHP-FPM
      service:
        name: php{{ php_ver }}-fpm
        state: restarted

    - name: Crear directorio de logs de Nginx
      file:
        path: /var/log/nginx/{{ nginx_server_name }}.access.log
        state: touch
        owner: www-data
        group: www-data
      when: nginx_server_name is defined

    - name: Habilitar sitio de Nginx
      file:
        src: /etc/nginx/sites-available/moodle
        dest: /etc/nginx/sites-enabled/moodle
        state: link
      notify: Reiniciar Nginx

    - name: Cambiar propiedad del directorio de Moodle
      file:
        path: "{{ moodle_install_dir }}"
        owner: www-data
        group: www-data
        recurse: yes